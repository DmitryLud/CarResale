//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarResale.DBModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarResaleEntities : DbContext
    {
        private static CarResaleEntities _context;

        public CarResaleEntities()
            : base("name=CarResaleEntities")
        {
        }

        public static CarResaleEntities GetContext()
        {
            if (_context == null) _context = new CarResaleEntities();
            return _context;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Mark> Marks { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<ReceiptInvoice> ReceiptInvoices { get; set; }
        public virtual DbSet<ViewCar> ViewCars { get; set; }
        public virtual DbSet<ViewCustomer> ViewCustomers { get; set; }
        public virtual DbSet<ViewMark> ViewMarks { get; set; }
        public virtual DbSet<ViewModel> ViewModels { get; set; }
        public virtual DbSet<ViewOrder> ViewOrders { get; set; }
        public virtual DbSet<ViewReceiptInvoice> ViewReceiptInvoices { get; set; }
    
        public virtual ObjectResult<string> GetModels(Nullable<int> markID)
        {
            var markIDParameter = markID.HasValue ?
                new ObjectParameter("MarkID", markID) :
                new ObjectParameter("MarkID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModels", markIDParameter);
        }
    
        public virtual ObjectResult<SpecificDayReport_Result> SpecificDayReport(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecificDayReport_Result>("SpecificDayReport", dateParameter);
        }
    
        public virtual ObjectResult<SpecificPeriodReport_Result> SpecificPeriodReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecificPeriodReport_Result>("SpecificPeriodReport", dateStartParameter, dateEndParameter);
        }
    }
}
